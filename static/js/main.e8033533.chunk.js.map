{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pages","className","cn","disabled","href","onClick","map","page","active","length","items","App","location","useLocation","navigate","useNavigate","query","URLSearchParams","search","pageFromUrl","get","perPageFromUrl","useState","Number","itemsPerPage","setItemsPerPage","setCurrentPage","startItem","endItem","changeOnSelect","event","newPerPage","target","value","usePagination","visibleItems","slice","min","id","onChange","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8033533.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport const usePagination = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const query = new URLSearchParams(location.search);\n  const pageFromUrl = query.get('page') || '1';\n  const perPageFromUrl = query.get('perPage') || '5';\n\n  const [itemsPerPage, setItemsPerPage] = useState(Number(perPageFromUrl));\n  const [currentPage, setCurrentPage] = useState(Number(pageFromUrl));\n\n  const startItem = (currentPage - 1) * itemsPerPage;\n  const endItem = startItem + itemsPerPage;\n\n  const changeOnSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = Number(event.target.value);\n\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n    navigate(`?page=1&perPage=${newPerPage}`);\n  };\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n    navigate(`?page=${page}&perPage=${itemsPerPage}`);\n  };\n\n  return {\n    itemsPerPage,\n    currentPage,\n    startItem,\n    endItem,\n    changeOnSelect,\n    onPageChange,\n  };\n};\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageCount);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li\n            className={cn('page-item', {\n              active: page === currentPage,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn('page-item', {\n          disabled: currentPage === pages.length,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pageCount ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage < pageCount) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { getNumbers, usePagination } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const {\n    itemsPerPage,\n    currentPage,\n    startItem,\n    endItem,\n    changeOnSelect,\n    onPageChange,\n  } = usePagination();\n\n  const visibleItems = items.slice(startItem, endItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${Math.min(endItem, 42)} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={changeOnSelect}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}